/**
 * generated by Xtext
 */
package com.r00lerz.ruleDef.generator;

import com.google.common.collect.Iterables;
import com.r00lerz.ruleDef.ruleDef.BusinessRule;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class RuleDefGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_allContents);
    Iterable<BusinessRule> _filter = Iterables.<BusinessRule>filter(_iterable, BusinessRule.class);
    for (final BusinessRule e : _filter) {
      CharSequence _compile = this.compile(e);
      fsa.generateFile(
        "generatedcode.sql", _compile);
    }
  }
  
  public CharSequence compile(final BusinessRule r) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method operatorName is undefined for the type RuleDefGenerator"
      + "\n== cannot be resolved");
  }
}
