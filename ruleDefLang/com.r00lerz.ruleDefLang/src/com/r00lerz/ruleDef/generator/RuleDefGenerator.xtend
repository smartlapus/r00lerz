/*
 * generated by Xtext
 */
package com.r00lerz.ruleDef.generator

import com.r00lerz.ruleDef.ruleDef.BusinessRule
import com.r00lerz.ruleDef.ruleDef.ColumnValue
import com.r00lerz.ruleDef.ruleDef.StaticValue
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class RuleDefGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {

		for(e: resource.allContents.toIterable.filter(BusinessRule)) {
			fsa.generateFile(
			"generatedcode.sql",
			e.compile)		
		}
	}
	
	def compile(BusinessRule r){ '''
    	-evaluates business rule *name of business rule here*    
    	«r.columnvalue.valueToString» «IF r.operator.name == "bigger than"» > «ELSE» < «ENDIF» «r.value.valueToString»	
    '''
    }
    
    def dispatch valueToString(ColumnValue columnValue){
    	columnValue.tablename.name + "." + columnValue.columname.name
    }
    
    def dispatch valueToString(StaticValue staticValue){
    	staticValue.name
    }
}
